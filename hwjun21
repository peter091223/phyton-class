def construct_deconstruct(s):
    h = [s[:x] for x in range(1, len(s) + 1)]
    return h[:-1] + h[::-1]


print(construct_deconstruct("hello"))
print()


def remove_repeats(s):
    return ''.join(sorted(set(s), key=s.index))


print(remove_repeats("hello"))


def is_harshad(s):
    if s % sum(int(i) for i in str(s)) == 0:
        return True
    else:
        return False

        # return s % sum(int(i) for i in str(s)) == 0  # s divided by the sum of a loop


print(is_harshad(42))
print()


def common_elements(lst1, lst2):
    return sorted(set(lst1).intersection(set(lst2)))  # sorting set of lst1 and set of lst2


print(common_elements([-1, 3, 4, 6, 7, 9], [9, 3]))


def wiggle_string(s):
    lst = [' ' * i for i in range(len(s) + 1)]  # space * i + s then a loop that means from the range of len of s +1
    return lst[:-1] + lst[::-1]  # and i is getting multiplied every time


print(wiggle_string("hello"))
